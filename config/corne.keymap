/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

// Layer Definitions
#define QWE 0
#define LWR 1
#define RAI 2
#define ADJ 3
#define CTL 4

#define BT_SEL0 BT_SEL 0
#define BT_SEL1 BT_SEL 1
#define BT_SEL2 BT_SEL 2
#define BT_SEL3 BT_SEL 3
#define BT_SEL4 BT_SEL 4

#define BT_DC0 BT_DISC 0
#define BT_DC1 BT_DISC 1
#define BT_DC2 BT_DISC 2
#define BT_DC3 BT_DISC 3
#define BT_DC4 BT_DISC 4

// Behavior configuration
&mt {
    tapping-term-ms = <165>;
    quick_tap_ms = <200>;
};
&lt {
    tapping-term-ms = <165>;
    quick_tap_ms = <200>;
};
&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
			flavor = "tap-preferred";
            tapping-term-ms = <165>;
            quick-tap-ms = <200>;
			require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
    &kp ESC         &kp Q       &kp W       &kp E          &kp R          &kp T                &kp Y          &kp U         &kp I          &kp O         &kp P          &kp BSPC
    &mt LSHFT TAB   &hm LGUI A  &hm LSHFT S &hm LALT D     &kp F          &kp G                &kp H          &kp J         &kp K          &kp L         &kp SEMI       &kp SQT
    &mt LALT MINUS  &kp Z       &kp X       &kp C          &kp V          &kp B                &kp N          &kp M         &kp COMMA      &kp DOT       &kp FSLH       &kp EQUAL
                                           &kp RCTRL      &kp LGUI   &mt LCTRL SPACE          &lt LWR SPACE  &lt RAI ENTER  &mt LALT DEL
            >;
        };

        lower {
            bindings = <
    &kp ESC         &kp N1      &kp N2      &kp N3         &kp N4         &kp N5               &kp N6         &kp N7        &kp N8         &kp N9        &kp N0         &kp BSPC
    &mt LSHFT TAB   &kp LGUI    &kp HOME    &kp PG_UP      &kp PG_DN      &kp END              &kp LEFT       &kp DOWN      &kp UP         &kp RIGHT     &kp SEMI       &kp SQT
    &mt LALT MINUS  &trans      &trans      &trans         &trans         &kp INS              &trans         &trans        &kp COMMA      &kp DOT       &kp FSLH       &kp EQUAL
                                           &kp RCTRL      &kp LSHFT   &mt LCTRL SPACE          &trans         &lt LWR ENTER  &mt LALT DEL
            >;
        };

        raise {
            bindings = <
    &kp ESC         &kp EXCL    &kp AT      &kp HASH       &kp DLLR       &kp PRCNT            &kp CARET      &kp AMPS      &kp STAR       &kp LPAR      &kp RPAR       &kp BSPC
    &mt LSHFT TAB   &kp PIPE    &kp LPAR    &kp LBKT       &kp LCUR       &kp MINUS            &kp EQUAL      &kp RCUR      &kp RBKT       &kp RPAR      &mo ADJ        &kp SQT
    &mt LALT MINUS  &kp BSLH    &kp TILDE   &kp GRAVE      &kp PLUS       &trans               &trans         &kp UNDER     &kp COMMA      &kp DOT       &kp FSLH       &kp EQUAL
                                           &kp RCTRL      &kp LSHFT   &mt LCTRL SPACE          &trans         &lt LWR ENTER  &mt LALT DEL
            >;
        };

        adjust {
            bindings = <
    &kp ESC         &kp F1      &kp F2      &kp F3         &kp F4         &trans               &trans         &trans        &mo CTL        &trans        &trans       &kp BSPC
    &mt LSHFT TAB   &kp F5      &kp F6      &kp F7         &kp F8         &trans               &trans         &kp C_MUTE    &kp C_VOL_UP   &kp C_VOL_DN  &trans       &trans
    &mt LALT MINUS  &kp F9      &kp F10     &kp F11        &kp F12        &trans               &trans         &kp PSCRN     &kp C_BRI_INC  &kp C_BRI_DEC &trans       &trans
                                           &kp RCTRL      &kp LSHFT   &mt LCTRL SPACE          &trans         &trans         &mt LALT DEL
            >;
        };

        ctl {
            bindings = <
    &bt BT_CLR_ALL  &trans      &trans      &trans         &trans         &trans               &trans         &trans        &trans         &trans        &trans         &trans
    &bt BT_CLR      &bt BT_SEL0 &bt BT_SEL1 &bt BT_SEL2    &bt BT_SEL3    &bt BT_SEL4          &trans         &trans        &trans         &trans        &trans         &trans
    &trans          &bt BT_DC0  &bt BT_DC1  &bt BT_DC2     &bt BT_DC3     &bt BT_DC4           &trans         &trans        &trans         &trans        &trans         &trans
                                           &kp RCTRL      &trans      &trans                   &trans         &trans         &trans 
            >;
        };
    };
};
